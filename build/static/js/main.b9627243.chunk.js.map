{"version":3,"sources":["date.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","container","display","flexWrap","marginLeft","spacing","marginRight","width","DatePickers","useState","Date","selectedDate","setSelecteDate","year","getFullYear","classes","className","noValidate","utils","DateFnsUtils","id","label","variant","value","onChange","format","margin","fullWidth","alignItems","KeyboardButtonProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAAS,OACTC,SAAU,OACVC,WAAYJ,EAAMK,QAAQ,IAC1BC,YAAaN,EAAMK,QAAQ,IAC1BE,MAAO,SAQG,SAASC,IACtB,MAAuCC,mBAAS,IAAIC,MAApD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAwBF,EAAaG,cALhC,KAMLC,EAAUjB,IAEhB,OACE,sBAAMkB,UAAWD,EAAQd,UAAWgB,YAAU,EAA9C,SACE,cAAC,IAAD,CAAyBC,MAAOC,IAAhC,SACE,cAAC,IAAD,CACEC,GAAG,qBACHC,MAAM,mDACNC,QAAQ,SACRC,MAAOZ,EACPa,SAAUZ,EACVa,OAAQ,eAAOZ,EAAO,+BACtBa,OAAO,SACPC,WAAS,EACTC,WAAW,SACXC,oBAAqB,CACnB,aAAc,qBC/BXC,MARf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,OCMSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b9627243.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"date-fns\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginLeft: theme.spacing(60),    \n    marginRight: theme.spacing(10),   \n     width: 250,\n  }\n}));\n\nvar handleDateChange = function (a) {\n  return a - 1911;\n};\n\nexport default function DatePickers() {\n  const [selectedDate, setSelecteDate] = useState(new Date());\n  const year = handleDateChange(selectedDate.getFullYear());\n  const classes = useStyles();\n\n  return (\n    <form className={classes.container} noValidate>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n          id=\"date-picker-inline\"\n          label=\"阿公店開店日選擇\"\n          variant=\"inline\"\n          value={selectedDate}\n          onChange={setSelecteDate}\n          format={\"民國\" + year + \"年 / MM月 / dd號\"}\n          margin=\"normal\"\n          fullWidth\n          alignItems='center'\n          KeyboardButtonProps={{\n            \"aria-label\": \"change date\"\n          }}\n        />\n      </MuiPickersUtilsProvider>\n    </form>\n  );\n}","import './App.css';\nimport Date from './date'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Date/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}